services:
  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: ${DATA_DATABASE_USER}
      POSTGRES_PASSWORD: ${DATA_DATABASE_PASSWORD}
      POSTGRES_DB: ${DATA_DATABASE_NAME}
    volumes:
      - ./data_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATA_DATABASE_USER} -d ${DATA_DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  migration:
    build:
      context: .
      target: migration
    environment:
      DATA_DATABASE_HOST: ${DATA_DATABASE_HOST}
      # DATA_DATABASE_PORT: ${DATA_DATABASE_PORT}
      DATA_DATABASE_PORT: 5432
      DATA_DATABASE_NAME: ${DATA_DATABASE_NAME}
      DATA_DATABASE_USER: ${DATA_DATABASE_USER}
      DATA_DATABASE_PASSWORD: ${DATA_DATABASE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
  server:
    build:
      context: .
      target: server
    restart: always
    environment:
      DATA_DATABASE_HOST: "${DATA_DATABASE_HOST}"
      # DATA_DATABASE_PORT: "${DATA_DATABASE_PORT}"
      DATA_DATABASE_PORT: 5432
      DATA_DATABASE_NAME: "${DATA_DATABASE_NAME}"
      DATA_DATABASE_USER: "${DATA_DATABASE_USER}"
      DATA_DATABASE_PASSWORD: "${DATA_DATABASE_PASSWORD}"
      DATA_FOLDER: "${DATA_FOLDER}"
      DATA_CRYPTO_KEY: "${DATA_CRYPTO_KEY}"
      SERVER_MODE: "${SERVER_MODE}"
      SERVER_HTTP_ADDR: "${SERVER_HTTP_ADDR}"
    volumes:
      - ${DATA_FOLDER}:/opt/tt-go-json-fernet/data
    ports:
      - "8080:8080"
    depends_on:
      - db
      - migration
